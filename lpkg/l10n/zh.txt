error.root_required=需要root权限运行
error.db_locked=lpkg数据库被另一进程锁定，请稍后重试。
error.db_lock_failed=无法锁定数据库。
error.create_dir_failed=无法创建目录: {}
error.path_not_dir=路径不是目录: {}
error.create_file_failed=无法创建文件: {}
error.get_arch_failed=无法获取系统架构
error.unsupported_arch=不支持的架构: {}
error.invalid_mirror_config=无效的镜像配置
error.download_failed=无法下载包: {}
error.extract_failed=解压失败: {}
error.incomplete_package=包不完整，缺少文件: {}
error.no_man_page=没有找到 {} 的man page
error.open_man_page_failed=无法打开man page: {}
error.download_latest_txt_failed=无法获取 latest.txt: {}
error.read_latest_txt_failed=无法从 latest.txt 读取版本信息或文件为空: {}
error.prefix=错误:
info.usage=用法: {} <命令> [参数]
info.commands=命令:
info.install_desc=  install <包名>[:版本]...  安装一个或多个指定包 (默认最新版)
info.remove_desc=  remove <包名>... [--force] 移除一个或多个指定包 (使用 --force 强制移除)
info.autoremove_desc=  autoremove            自动移除不再需要的包
info.upgrade_desc=  upgrade               升级所有可升级的包
info.man_desc=  man <包名>            显示包的man page
info.install_complete=安装完成
info.uninstall_complete=lpkg 已卸载
info.extracting=正在解压文件: {} 个已处理
info.extract_complete=解压完成，共处理 {} 个文件
info.downloading=正在下载...
info.package_already_installed=包 {} 已安装，跳过。
info.installing_package=开始安装 {} (版本: {})
info.latest_version=最新版本为: {}
info.downloading_from=正在从 {} 下载...
info.extracting_to_tmp=正在解压到临时目录...
info.checking_deps=正在检查依赖...
info.dep_found=发现依赖包: {}
info.dep_not_installed=依赖 {} 未安装，开始安装...
info.dep_already_installed=依赖 {} 已安装，跳过。
info.copying_files=正在复制文件到系统...
info.copy_complete=文件复制完成，共复制 {} 个文件
info.package_installed_successfully={} 已成功安装!
info.package_not_installed=包 {} 未安装，无需移除。
info.skip_remove_dependency=跳过删除，包 {} 被 {} 依赖
info.removing_package=正在移除 {}...
info.files_removed=移除了 {} 个文件。
info.package_removed_successfully={} 已成功移除
info.checking_autoremove=正在检查可自动移除的包...
info.no_autoremove_packages=没有找到可自动移除的包。
info.autoremove_complete=已自动移除 {} 个包。
info.checking_upgradable=正在检查可升级的包...
info.upgradable_found=发现可升级包: {} ({} -> {})
info.all_packages_latest=所有包都已是最新版本。
info.upgraded_packages=已升级 {} 个包。
warning.prefix=警告:
warning.circular_dependency=检测到循环依赖: {} -> {}。忽略此依赖关系。
warning.skip_already_installed=跳过安装，包已在依赖安装过程中安装: {}
warning.copy_file_failed=无法复制文件 {} 到 {}: {}
warning.remove_file_failed=无法移除文件 {}: {}
warning.get_latest_version_failed=无法获取 {} 的最新版本，跳过
warning.overwrite_file=文件 {} 也由包 {} 提供。是否覆盖？
warning.remove_shared_file=文件 {} 也被包 {} 使用。是否仍然移除？
info.skipped_overwrite=已跳过覆盖: {}
info.skipped_remove=已跳过移除: {}
prompt.yes_no=(y/n)
