error.root_required=Root permission is required to run.
error.db_locked=lpkg database is locked by another process, please try again later.
error.db_lock_failed=Failed to lock the database.
error.create_dir_failed=Failed to create directory: {}
error.path_not_dir=Path is not a directory: {}
error.create_file_failed=Failed to create file: {}
error.get_arch_failed=Failed to get system architecture.
error.unsupported_arch=Unsupported architecture: {}
error.invalid_mirror_config=Invalid mirror configuration.
error.download_failed=Failed to download package: {}
error.extract_failed=Extraction failed: {}
error.incomplete_package=Package is incomplete, missing file: {}
error.no_man_page=No man page found for {}.
error.open_man_page_failed=Failed to open man page: {}
error.download_latest_txt_failed=Failed to download latest.txt: {}
error.read_latest_txt_failed=Failed to read version from latest.txt or file is empty: {}
error.invalid_version_format=Invalid version format: {}
error.malicious_path_in_archive=Malicious path detected in archive: {}
error.prefix=Error:
info.usage=Usage: {} [OPTIONS] <command> [args]
info.commands=Commands:
info.non_interactive_option_desc=Run non-interactively. 'y' for all, 'n' for all (default).
info.install_desc=  install <pkg>[:ver]...  Install package(s).
info.remove_desc=  remove <pkg>... [--force]  Remove package(s).
info.autoremove_desc=  autoremove               Remove unused packages.
info.upgrade_desc=  upgrade                  Upgrade all packages.
info.man_desc=  man <pkg>                  Show man page.
info.help_desc=Print usage
info.force_desc=Force remove
info.install_complete=Installation complete.
info.uninstall_complete=Uninstallation complete.
info.extracting=Extracting files: {} processed
info.extract_complete=Extraction complete, {} files processed.
info.downloading=Downloading...
info.package_already_installed=Package {} is already installed, skipping.
info.installing_package=Starting to install {} (version: {})
info.latest_version=Latest version is: {}
info.downloading_from=Downloading from {}...
info.extracting_to_tmp=Extracting to temporary directory...
info.checking_deps=Checking dependencies...
info.dep_found=Found dependency package: {}
info.dep_not_installed=Dependency {} is not installed, starting installation...
info.dep_already_installed=Dependency {} is already installed, skipping.
info.copying_files=Copying files to system...
info.copy_complete=File copy complete, {} files copied.
info.package_installed_successfully={} has been successfully installed!
info.package_not_installed=Package {} is not installed, no need to remove.
info.skip_remove_dependency=Skipping removal, package {} is depended on by {}.
info.removing_package=Removing {}...
info.files_removed=Removed {} files.
info.package_removed_successfully={} has been successfully removed.
info.checking_autoremove=Checking for packages that can be automatically removed...
info.no_autoremove_packages=No packages found to be automatically removed.
info.autoremove_complete=Automatically removed {} packages.
info.checking_upgradable=Checking for upgradeable packages...
info.upgradable_found=Found upgradeable package: {} ({} -> {})
info.all_packages_latest=All packages are up to date.
info.upgraded_packages=Upgraded {} packages.
warning.prefix=Warning:
warning.circular_dependency=Circular dependency detected: {} -> {}. This dependency will be ignored, but the package might not function correctly if it relies on this dependency being fully installed beforehand.
warning.skip_already_installed=Skipping installation, package already installed during dependency installation: {}
warning.copy_file_failed=Failed to copy file {} to {}: {}
warning.remove_file_failed=Failed to remove file {}: {}
warning.get_latest_version_failed=Failed to get the latest version of {}, skipping.
info.skipped_overwrite=Skipped overwriting: {}
info.skipped_remove=Skipped removing: {}
prompt.yes_no=(y/n)
error.invalid_non_interactive_value=Invalid value for --non-interactive. Must be 'y' or 'n'.
error.hash_mismatch=Hash mismatch for package: {}
error.hash_download_failed=Failed to download hash file: {}
error.openssl_ctx_failed=Failed to create OpenSSL context
error.openssl_init_failed=Failed to initialize OpenSSL digest
error.openssl_update_failed=Failed to update OpenSSL digest
error.openssl_final_failed=Failed to finalize OpenSSL digest
error.open_file_failed=Failed to open file: {}
info.checking_for_file_conflicts=Checking for file conflicts...
error.file_conflict_header=File conflict detected. The following files are already owned by other packages:
error.file_conflict_entry=File {} is owned by package {}
error.installation_aborted=Installation aborted due to file conflicts.
info.checking_for_shared_files=Checking for shared files...
error.shared_file_header=Cannot remove package. The following files are also used by other packages:
error.shared_file_entry=File {} is used by: {}
error.removal_aborted=Removal aborted because files are shared.
warning.autoremove_skipped=Could not autoremove {}: {}
info.autoremove_candidates=Found {} packages to be automatically removed.
error.upgrade_failed=Failed to upgrade {}: {}
info.restoring_package=Attempting to restore original version of {} ({})
info.upgrading_package=Upgrading package {} from {} to {}
error.copy_failed_rollback=Failed to copy file {} to {}: {}. Rolling back installation.
info.pre_op_check=Performing pre-operation checks...
error.cmd_parse_error=Command line parsing error: {}
error.lpkg_error=Lpkg error: {}
error.unexpected_error=An unexpected error occurred: {}
info.removing_old_version=Removing old version {} of {}
error.rollback_install=Rolling back installation of {}
error.fatal_restore_failed=Fatal: Failed to restore package {} : {}
warning.cleanup_tmp_failed=Failed to clean up temporary directory {} : {}
info.removing_tmp_dir=Removing temporary directory: {}
info.tmp_dir_removed=Temporary directory removed: {}